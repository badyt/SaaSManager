openapi: 3.0.3
info:
  title: SaaSManager Usage Monitoring API
  version: 1.0.0
  description: API for tracking and analyzing user activity logs in SaaSManager.
paths:
  /usage/getLogs:
    get:
      summary: Fetch usage logs
      description: Retrieves usage logs for analysis, with optional filters for user, tool, and date range.
      operationId: getLogs
      tags:
        - Usage
      parameters:
        - name: userId
          in: query
          description: Filter logs by user ID
          schema:
            type: integer
        - name: toolId
          in: query
          description: Filter logs by tool ID
          schema:
            type: integer
        - name: startDate
          in: query
          description: Filter logs from this date (inclusive)
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: Filter logs until this date (inclusive)
          schema:
            type: string
            format: date-time
        - name: activityType
          in: query
          description: Filter logs by activity type
          schema:
            type: string
      responses:
        "200":
          description: Successfully retrieved usage logs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UsageLogDTO"
        "400":
          description: Invalid query parameters
        "500":
          description: Internal server error

  /usage/logUser:
    post:
      summary: Log user interaction
      description: Records user interactions with a subscription.
      operationId: logUserInteraction
      tags:
        - Usage
      requestBody:
        description: Log entry containing interaction details.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UsageLogRequest"
      responses:
        "201":
          description: Successfully logged the interaction.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsageLogDTO"
        "400":
          description: Invalid request body.
        "500":
          description: Internal server error.

  /usage/getUnderutilized:
    get:
      summary: Get underutilized subscriptions
      description: Detect underutilized or unused subscriptions based on activity data.
      operationId: getUnderutilized
      tags:
        - Usage
      parameters:
        - name: threshold
          in: query
          description: Minimum number of activities required to consider a subscription utilized
          schema:
            type: integer
            default: 5
        - name: period
          in: query
          description: Time period to analyze (e.g., last 30 days)
          schema:
            type: string
            example: "30d"
      responses:
        "200":
          description: List of underutilized subscriptions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UnderutilizedSubscription"
        "400":
          description: Invalid query parameters
        "500":
          description: Internal server error

components:
  schemas:
    UsageLogDTO:
      type: object
      properties:
        logId:
          type: integer
          example: 5
        userId:
          type: integer
          example: 123
        subscriptionId:
          type: integer
          example: 2
        activityDate:
          type: string
          format: date-time
          example: "2024-01-01T12:00:00Z"
        activityType:
          type: string
          example: "login"

    UnderutilizedSubscription:
      type: object
      properties:
        subscriptionId:
          type: integer
        userId:
          type: integer
        userName:
          type: string
        toolName:
          type: string
        activityCount:
          type: integer
          example: 2

    UsageLogRequest:
      type: object
      required:
        - userId
        - subscriptionId
        - activityType
      properties:
        userId:
          type: integer
          description: The ID of the user performing the interaction.
          example: 123
        subscriptionId:
          type: integer
          description: The ID of the subscription being used.
          example: 456
        activityType:
          type: string
          description: The type of activity performed (e.g., 'login', 'view', 'download').
          example: "login"
